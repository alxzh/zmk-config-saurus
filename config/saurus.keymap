#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <200>;
};

&gresc {
    mods = <(MOD_RGUI|MOD_LGUI)>;
    keep-mods = <(MOD_LGUI)>;
};

/ {
    combos {
        compatible = "zmk,combos";

    };

    macros {
        bt_clr_0: bt_clr_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &bt BT_CLR>;
            label = "BT_CLR_0";
        };

        bt_clr_1: bt_clr_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &bt BT_CLR>;
            label = "BT_CLR_1";
        };

        bt_clr_2: bt_clr_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2 &bt BT_CLR>;
            label = "BT_CLR_2";
        };

        bt_clr_3: bt_clr_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3 &bt BT_CLR>;
            label = "BT_CLR_3";
        };

        bt_clr_4: bt_clr_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4 &bt BT_CLR>;
            label = "BT_CLR_4";
        };

        mac_logout: mac_logout {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(Q))>;
            label = "MAC_LOGOUT";
        };

        mac_copy: mac_copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(C)>;
            label = "MAC_COPY";
        };

        mac_paste: mac_paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(V)>;
            label = "MAC_PASTE";
        };

        macos_cut: macos_cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(X)>;
            label = "MACOS_CUT";
        };

        mac_undo: mac_undo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(Z)>;
            label = "MAC_UNDO";
        };
    };

    behaviors {
        bt0: bt0 {
            compatible = "zmk,behavior-mod-morph";
            label = "BT0";
            bindings = <&bt BT_SEL 0>, <&bt_clr_0>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt1: bt1 {
            compatible = "zmk,behavior-mod-morph";
            label = "BT1";
            bindings = <&bt BT_SEL 1>, <&bt_clr_1>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt2: bt2 {
            compatible = "zmk,behavior-mod-morph";
            label = "BT2";
            bindings = <&bt BT_SEL 2>, <&bt_clr_2>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt3: bt3 {
            compatible = "zmk,behavior-mod-morph";
            label = "BT3";
            bindings = <&bt BT_SEL 3>, <&bt_clr_3>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt4: bt4 {
            compatible = "zmk,behavior-mod-morph";
            label = "BT4";
            bindings = <&bt BT_SEL 4>, <&bt_clr_4>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <18 18 19 20 21 22 30 31 32 33 34 42 43 44 45 46 51 54 53 55 52 50>;
            require-prior-idle-ms = <100>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <13 14 15 16 25 26 27 28 37 38 39 40 17 29 41 52 51 50 55 54 53>;
            hold-trigger-on-release;
            require-prior-idle-ms = <100>;
        };

        ltl: ltl {
            compatible = "zmk,behavior-hold-tap";
            label = "LTL";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <18 18 19 20 21 22 30 31 32 33 34 42 43 44 45 46 51 50 52 53 54 55>;
            require-prior-idle-ms = <100>;
        };

        ltr: ltr {
            compatible = "zmk,behavior-hold-tap";
            label = "LTR";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <13 14 15 16 25 26 27 28 37 38 39 40 17 29 41 50 51 52 53 54 55>;
            hold-trigger-on-release;
            require-prior-idle-ms = <100>;
        };

        spc_tab: spc_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "SPC_TAB";
            bindings = <&kp SPACE>, <&kp TAB>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_LCTL)>;
            keep-mods = <(MOD_LGUI)>;
        };

        lt_spc_tab: lt_spc_tab {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_SPC_TAB";
            bindings = <&mo>, <&spc_tab>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        enter_tab: enter_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "ENTER_TAB";
            bindings = <&kp ENTER>, <&kp TAB>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_LCTL)>;
            keep-mods = <(MOD_LGUI)>;
        };

        bsp_enter: bsp_enter {
            compatible = "zmk,behavior-mod-morph";
            label = "BSP_ENTER";
            bindings = <&kp BACKSPACE>, <&kp ENTER>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };

        r_tab: r_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "R_TAB";
            bindings = <&kp R>, <&kp TAB>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_LCTL)>;
            keep-mods = <(MOD_LGUI)>;
        };

        lt_r_tab: lt_r_tab {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_R_TAB";
            bindings = <&mo>, <&r_tab>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        night {
            bindings = <
            &kp B              &kp F                &kp L                &kp D          &kp Q        &kp SQT        &kp W        &kp O                 &kp U                 &kp J              
            &hml LEFT_SHIFT N  &hml LEFT_CONTROL S  &hml LEFT_COMMAND H  &ltl 4 T       &kp K        &kp Y          &ltr 4 C     &hmr RIGHT_COMMAND A  &hmr RIGHT_CONTROL E  &hmr RIGHT_SHIFT I
            &kp X              &kp V                &kp M                &kp P          &kp Z        &kp MINUS      &kp G        &kp COMMA             &kp PERIOD            &kp SLASH         
                                                    &gresc               &lt_r_tab 2 0  &kp ENTER    &kp BACKSPACE  &lt 3 SPACE  &kp SEMICOLON    
            >;
        };

        num {
            bindings = <
       &none           &none             &none      &none         &none         &kp PLUS    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp ASTERISK
       &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LCMD   &kp LEFT_ALT  &caps_word    &kp MINUS   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0
       &mac_undo       &macos_cut        &mac_copy  &mac_paste    &none         &kp PERIOD  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH   
                                         &trans     &trans        &trans        &trans      &trans        &trans
            >;
        };

        nav {
            bindings = <
       &none           &kp K_PREV        &kp K_PLAY_PAUSE  &kp K_NEXT  &none         &none   &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &mac_logout
       &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LCMD          &kp LALT    &caps_word    &none   &kp LEFT    &kp DOWN_ARROW     &kp UP_ARROW  &kp RIGHT  
       &none           &none             &none             &none       &none         &none   &kp HOME    &kp PAGE_DOWN      &kp PG_UP     &kp END    
                                         &trans            &trans      &trans        &trans  &trans      &trans
            >;
        };

        sym {
            bindings = <
       &kp GRAVE        &kp LESS_THAN  &kp GREATER_THAN  &kp MINUS          &kp PIPE       &kp CARET   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AMPERSAND  &kp BACKSLASH
       &kp EXCLAMATION  &kp ASTERISK   &kp SLASH         &kp EQUAL          &kp HASH       &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON  &kp COLON    
       &kp AT_SIGN      &kp PLUS       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PERCENT    &kp TILDE   &kp UNDERSCORE        &kp COMMA              &kp PERIOD     &kp QUESTION 
                                       &trans            &kp SPACE          &trans         &kp ENTER   &kp BACKSPACE         &trans
            >;
        };

        controls {
            bindings = <
        &bt_clr_0  &bt_clr_1  &bt_clr_2  &bt_clr_3  &bt_clr_4         &trans  &trans  &trans  &trans  &trans
        &bt0       &bt1       &bt2       &bt3       &bt4              &trans  &trans  &trans  &trans  &trans
        &soft_off  &trans     &trans     &trans     &studio_unlock    &trans  &trans  &trans  &trans  &trans
                              &trans     &trans     &trans            &trans  &trans  &trans
            >;
        };
    };
};
